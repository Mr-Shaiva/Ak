bool isValidParenthesis(string s) 
{

  stack<char> st;

  for (int i = 0; i < s.length(); i++)
  {

    char ch = s[i];

    if (ch == '(' || ch == '{' || ch == '[')
    {

      // if opening bracket, push into stack
      st.push(ch);

    } 
    else 
    {

        // if closing bracket, top the stack and check and pop
        if (!st.empty()) 
        {
            char top = st.top();
            if ((ch == ')' && top == '(') || (ch == '}' && top == '{') ||
                (ch == ']' && top == '[')) 
                {
                    st.pop();
                }
                else 
                {
                    return false;
                }
        } 
        else 
        {
            return false;
        }
    }
  }

  if (st.empty())
    return true;
  else
    return false;
}
