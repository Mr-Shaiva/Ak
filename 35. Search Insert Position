class Solution(object):
    def searchInsert(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        start , end = 0 , len(nums)-1

        while(start <= end):
            mid = start + (end-start)/2

            if(nums[mid] == target):
                return mid
            elif(nums[mid] < target):
                start = mid+1
            else:
                end = mid-1

        return start

####################################################

class Solution {
public:      
    int searchInsert(vector<int>& nums, int target) {
        int start = 0, end = nums.size()-1;
        
        while(start <= end){
            int mid = start + (end-start)/2;

            if(nums[mid] == target)
                return mid;
            else if(nums[mid] < target)
                start = mid+1;
            else
                end = mid-1;
        }
        return start;
    }
};
