class Solution {
public:
    int mySqrt(int x) {
      
         if (x == 0)
            return x;
        int first = 1, last = x;
        while (first <= last) {
            int mid = first + (last - first) / 2;
            
            if (mid  == x / mid)
                return mid;
            else if (mid > x / mid) {
                last = mid - 1;
            }
            else {
                first = mid + 1;
            }
        }
        return last;
    }
};

/*
class Solution {
public:
    int BinarySearch(int n){
        int s=0,e=n;
        long long int mid=s+(e-s)/2;
        int ans=-1;
        while(s<=e){
            long long int sqre=mid*mid;

            if(sqre==n) return mid;
            if(sqre<n){
                ans=mid;
                s=mid+1;
            }else{ 
                e=mid-1;
            }
            mid=s+(e-s)/2;
        }
return ans;
    }

    int mySqrt(int x) {
        return BinarySearch(x);
    }
};
*/
